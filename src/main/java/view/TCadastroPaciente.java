package view;

import model.LimiteDigitos;
import model.Paciente;
import javax.swing.JOptionPane;
import dao.PacienteDAO;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class TCadastroPaciente extends javax.swing.JFrame {

    public TCadastroPaciente() throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        idadeField.setDocument(new LimiteDigitos(3));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomePacienteField = new javax.swing.JTextField();
        enderecoField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        fazerCadastroButton = new javax.swing.JButton();
        idadeField = new javax.swing.JTextField();
        areaSaudeBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        naoSaudeBox = new javax.swing.JCheckBox();
        voltarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de paciente");
        setBackground(new java.awt.Color(99, 218, 201));

        nomePacienteField.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome do paciente"));
        nomePacienteField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomePacienteFieldActionPerformed(evt);
            }
        });

        enderecoField.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));
        enderecoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enderecoFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Cadastro de paciente");

        fazerCadastroButton.setBackground(new java.awt.Color(99, 218, 201));
        fazerCadastroButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fazerCadastroButton.setForeground(new java.awt.Color(0, 0, 0));
        fazerCadastroButton.setText("Cadastro");
        fazerCadastroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fazerCadastroButtonActionPerformed(evt);
            }
        });

        idadeField.setBorder(javax.swing.BorderFactory.createTitledBorder("Idade"));
        idadeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idadeFieldActionPerformed(evt);
            }
        });

        areaSaudeBox.setText("Sim");
        areaSaudeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaSaudeBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("É da área da saúde?");

        naoSaudeBox.setText("Não");
        naoSaudeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naoSaudeBoxActionPerformed(evt);
            }
        });

        voltarButton.setText("Voltar");
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomePacienteField)
                            .addComponent(enderecoField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idadeField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(areaSaudeBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(naoSaudeBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(54, 54, 54))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(voltarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fazerCadastroButton)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(nomePacienteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(idadeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(areaSaudeBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(naoSaudeBox)))
                .addGap(32, 32, 32)
                .addComponent(enderecoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fazerCadastroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(voltarButton))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fazerCadastroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fazerCadastroButtonActionPerformed

        String nome = nomePacienteField.getText();
        int idade = Integer.parseInt(idadeField.getText().trim());
        boolean area_saude = areaSaudeBox.isSelected();
        boolean nao_area_saude = naoSaudeBox.isSelected();
        String endereco = enderecoField.getText();
        int nivel = 0;

        if (idade > 69) {
            nivel = 1;
        }
        if (idade < 70) {
            nivel = 3;
        }
        if (areaSaudeBox.isSelected() && !naoSaudeBox.isSelected() && idade < 70) {
            nivel = 2;
        }

        Paciente paciente = new Paciente(nome, idade, area_saude, endereco, nivel);
        PacienteDAO pacienteDAO = new PacienteDAO();

        do {

            if (nomePacienteField.getText().trim().equals("") || idadeField.getText().trim().equals("") || enderecoField.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Falha no cadastro por falta de dados!", "Registro falhou!", JOptionPane.ERROR_MESSAGE);
                nomePacienteField.setText("");
                idadeField.setText("");
                enderecoField.setText("");
                return;
            }

            if (areaSaudeBox.isSelected() && naoSaudeBox.isSelected()) {
                JOptionPane.showMessageDialog(this, "Falha no cadastro por excesso de dados!", "Registro falhou!", JOptionPane.ERROR_MESSAGE);
                nomePacienteField.setText("");
                idadeField.setText("");
                enderecoField.setText("");
                return;
            }

            if (!areaSaudeBox.isSelected() && !naoSaudeBox.isSelected()) {
                JOptionPane.showMessageDialog(this, "Falha no cadastro por falta de dados!", "Registro falhou!", JOptionPane.ERROR_MESSAGE);
                nomePacienteField.setText("");
                idadeField.setText("");
                enderecoField.setText("");
                return;
            }

        } while (nomePacienteField.getText().trim().equals("") || idadeField.getText().trim().equals("") || enderecoField.getText().trim().equals("") || (areaSaudeBox.isSelected() && naoSaudeBox.isSelected()) || (!areaSaudeBox.isSelected() && !naoSaudeBox.isSelected()));

        if (PacienteDAO.consulta(paciente)) {
            JOptionPane.showMessageDialog(this, "Falha no cadastro, paciente já registrado!", "Registro falhou!", JOptionPane.ERROR_MESSAGE);
            nomePacienteField.setText("");
            idadeField.setText("");
            enderecoField.setText("");
            return;
        } else {
            try {
                pacienteDAO.cadastrarPaciente(paciente);
                TCadastroPacienteConcluido tela = new TCadastroPacienteConcluido();
                tela.setVisible(true);
                this.dispose();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_fazerCadastroButtonActionPerformed

    private void nomePacienteFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomePacienteFieldActionPerformed

    }//GEN-LAST:event_nomePacienteFieldActionPerformed

    private void enderecoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enderecoFieldActionPerformed

    }//GEN-LAST:event_enderecoFieldActionPerformed

    private void idadeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idadeFieldActionPerformed

    }//GEN-LAST:event_idadeFieldActionPerformed

    private void areaSaudeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaSaudeBoxActionPerformed

    }//GEN-LAST:event_areaSaudeBoxActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        try {
            TDashboardAdmin tela = new TDashboardAdmin();
            tela.setVisible(true);
            this.dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_voltarButtonActionPerformed

    private void naoSaudeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naoSaudeBoxActionPerformed

    }//GEN-LAST:event_naoSaudeBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TCadastroPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TCadastroPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TCadastroPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TCadastroPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TCadastroPaciente().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(TCadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox areaSaudeBox;
    private javax.swing.JTextField enderecoField;
    private javax.swing.JButton fazerCadastroButton;
    private javax.swing.JTextField idadeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox naoSaudeBox;
    private javax.swing.JTextField nomePacienteField;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
